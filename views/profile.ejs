<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - Disc Golf Inventory</title>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>

<body>
    <!-- Include the header -->
    <%- include('partials/header', { title: 'Profile' , user: user }) %>

        <div class="container mt-5">
            <div style="display: flex;">
                <h1>User Profile</h1>
                <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                    <i class="fa-solid fa-gear"></i>
                </button>

            </div>

            <div style="display: flex; align-items: center; align-items: baseline;">
                <p>Welcome, <%= user.username.charAt(0).toUpperCase() + user.username.slice(1) %>
                </p>
                <a href="/logout" class="btn" style="margin-left: 10px;"><i class="fa-solid fa-right-from-bracket"></i>
                    Logout</a>
            </div>



            <hr>
            <% if (favoriteDisc) { %>
                <table class="table">
                    <thead>
                        <tr class="favorite-disc">
                            <th>Favorite Disc:
                            </th>
                            <th>Checked Out</th>
                            <th>
                                Discs
                            </th>
                            <th>Bags</th>
                        </tr>
                    </thead>
                    <tbody>
                        <td>
                            <%= favoriteDisc.name %>
                        </td>
                        <td>
                            <%= favoriteDisc.times_checked_out %> times
                        </td>
                        <td>
                            <%= discCount %>
                        </td>
                        <td>
                            <%= bagCount %>
                        </td>
                        <% } else { %>
                            <p>You do not have any discs recorded.</p>
                            <% } %>



                    </tbody>
                </table>


                <!-- Edit Profile Modal -->
                <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form action="/update-profile" method="POST">
                                    <div class="form-group">
                                        <label for="username">Username:</label>
                                        <input type="text" id="username" name="username" value="<%= user.username %>"
                                            required>
                                    </div>
                                    <div class="form-group">
                                        <label for="email">Email:</label>
                                        <input type="email" id="email" name="email" value="<%= user.email %>" required>
                                    </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Update Profile</button>
                            </div>
                            </form>
                        </div>
                    </div>
                </div>
                <hr>
                <h2>Disc Graphs</h2>
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" style="width: 50%;" role="presentation">
                        <button class="nav-link" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button"
                            role="tab" style="width: 100%;font-weight: 600;" aria-controls="home"
                            aria-selected="true">Flight
                            Numbers</button>
                    </li>
                    <!-- Add another tab for weight and disc type -->
                    <li class="nav-item" style="width: 50%;" role="presentation">
                        <button class="nav-link" id="profile-tab" style="width: 100%;font-weight: 600;"
                            data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab"
                            aria-controls="profile" aria-selected="false">Weight &
                            Type</button>
                    </li>

                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <canvas id="flightNumbersChart" width="400" height="400"></canvas>

                    </div>

                </div>
                <div class="tab-content1" id="myWeightContent">
                    <div class="tab-pane fade show active" id="profileContent" role="tabpanel"
                        aria-labelledby="profile-tab">
                        <canvas id="weightTypeChart" width="400" height="400"></canvas>
                    </div>
                </div>
                <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        const tabContent = document.getElementById("myTabContent");
                        const weightContent = document.getElementById("myWeightContent");
                        const homeTab = document.getElementById("home-tab");

                        // Hide the graph tab content
                        tabContent.style.display = "none";
                        weightContent.style.display = "none";

                        // Show the graph tab content and fetch data when the tab is clicked
                        homeTab.addEventListener("click", function () {
                            if (tabContent.style.display === "none") {
                                weightContent.style.display = "none";
                                tabContent.style.display = "block";
                            };
                            fetch('/api/discs')
                                .then(response => response.json())
                                .then(data => {
                                    const discs = [
                                        { name: "Disc1", speed: 7, glide: 5, turn: -1, fade: 1, color: "red" },
                                        { name: "Disc2", speed: 9, glide: 4, turn: -2, fade: 3, color: "blue" },
                                        // Add more discs here
                                    ];

                                    const ctx = document.getElementById('flightNumbersChart').getContext('2d');
                                    const discChart = new Chart(ctx, {
                                        type: 'scatter',
                                        data: {
                                            datasets: data.map(disc => ({
                                                label: disc.name,
                                                data: [{ x: disc.speed, y: disc.glide, r: 5 }],
                                                backgroundColor: disc.color,
                                                pointRadius: 10,
                                            })),
                                        },
                                        options: {
                                            legend: {
                                                display: false,

                                            },


                                            scales: {
                                                x: {
                                                    type: 'linear',
                                                    position: 'bottom',
                                                    min: 0,
                                                    max: 15,
                                                    title: {
                                                        display: true,
                                                        text: 'Speed',
                                                    },
                                                },
                                                y: {
                                                    type: 'linear',
                                                    position: 'left',
                                                    min: 0,
                                                    max: 15,
                                                    title: {
                                                        display: true,
                                                        text: 'Glide',
                                                    },
                                                },
                                                turn: {
                                                    type: 'linear',
                                                    position: 'right',
                                                    min: -5,
                                                    max: 5,
                                                    title: {
                                                        display: true,
                                                        text: 'Turn',
                                                    },
                                                },
                                                fade: {
                                                    type: 'linear',
                                                    position: 'top',
                                                    min: 0,
                                                    max: 5,
                                                    title: {
                                                        display: true,
                                                        text: 'Fade',
                                                    },
                                                },
                                            },
                                            plugins: {
                                                legend: {
                                                    display: false
                                                },
                                                tooltip: {
                                                    callbacks: {
                                                        label: (context) => {
                                                            const disc = data[context.datasetIndex]; // Get the disc for the current dataset
                                                            return `${disc.name} - ${disc.manufacturer} - ${disc.weight}g - ${disc.stability}`;
                                                        },
                                                    },
                                                },
                                            },

                                        },
                                    });




                                })
                                .catch(error => console.error('Error fetching disc data:', error));
                        });
                        const profileTab = document.getElementById("profile-tab");
                        let weightTypeChart = null;
                        // Fetch data for the new tab
                        profileTab.addEventListener("click", function () {
                            if (weightContent.style.display === "none") {
                                tabContent.style.display = "none"
                                weightContent.style.display = "block";
                            };
                            console.log("hi");
                            const profileTabContent = document.getElementById("profileContent");
                            profileTabContent.style.display = 'block';
                            if (1 == 1) {
                                fetch('/api/discs')
                                    .then(response => response.json())
                                    .then(data => {
                                        const ctx = document.getElementById('weightTypeChart').getContext('2d');
                                        console.log(data);
                                        const DATA_COUNT = 4;
                                        const DISC_TYPES = {
                                            labels: ['Approach', 'Putter', 'Mid-Range', 'Drver']
                                        };
                                        const NUMBER_CFG = { count: DATA_COUNT, min: 100, max: 200 };


                                        if (!weightTypeChart) { // Check if chart exists and destroy it
                                            weightTypeChart = new Chart(ctx, {
                                                type: 'scatter',
                                                data: {
                                                    datasets: data.map(disc => ({
                                                        label: disc.name,
                                                        data: [{ x: disc.disc_type, y: disc.weight, r: 5 }],
                                                        backgroundColor: disc.color,
                                                        pointRadius: 10,
                                                    })),
                                                },
                                                options: {
                                                    scales: {
                                                        x: {
                                                            type: 'category',
                                                            position: 'bottom',
                                                            title: {
                                                                display: true,
                                                                text: 'Type',
                                                            },
                                                            labels: ['Approach', 'Putter', 'Mid-Range', 'Driver'], // Add this line
                                                        },
                                                        y: {
                                                            type: 'linear',
                                                            position: 'left',
                                                            min: 100,
                                                            max: 200,
                                                            title: {
                                                                display: true,
                                                                text: 'Weight',
                                                            },
                                                        },
                                                    },

                                                    plugins: {
                                                        legend: {
                                                            display: false
                                                        },
                                                        tooltip: {
                                                            callbacks: {
                                                                label: (context) => {
                                                                    const disc = data[context.datasetIndex]; // Get the disc for the current dataset
                                                                    return `${disc.name} - ${disc.manufacturer} - ${disc.weight}g - ${disc.stability}`;
                                                                },
                                                            },
                                                        },
                                                    },
                                                }
                                            });
                                        }

                                        console.log(weightTypeChart.data.datasets[0].data[0].y);
                                    });


                            }
                        });
                    });


                </script>

        </div>

        <!-- Include the footer -->


        <!-- Include Bootstrap JS -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script src="/js/bootstrap.bundle.min.js"></script>
</body>

</html>